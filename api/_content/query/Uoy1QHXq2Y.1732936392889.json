{"_path":"/articles/2024/fedora_vscode_devcontainer_podman","_dir":"2024","_draft":false,"_partial":false,"_locale":"","title":"在Fedora中透過podman使用VSCode DevContainer","description":"之前在中曾經紀錄過如何使用 VSCode DevContainer 來容器化開發 Vue 專案，但因為自己平常用的作業系統是 Fedora，而 Fedora 內建的容器化引擎是 Podman，雖然 Podman 號稱與 Docker 之間的指令是互通的，但之前嘗試過會有錯誤而且一直找不到解方。","img":"923/i8GwZw.jpg","tags":["fedora","podman","docker","vscode","devcontainer"],"category":"frontend","readingTime":{"text":"4 min read","minutes":3.655,"time":219300,"words":731},"excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"之前在"},{"type":"element","tag":"article-inner-link","props":{"slug":"vue_stack_development_devcontainer"},"children":[]},{"type":"text","value":"中曾經紀錄過如何使用 VSCode DevContainer 來容器化開發 Vue 專案，但因為自己平常用的作業系統是 Fedora，而 Fedora 內建的容器化引擎是 Podman，雖然 Podman 號稱與 Docker 之間的指令是互通的，但之前嘗試過會有錯誤而且一直找不到解方。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"不過這幾天趁著要把筆電重灌成 Fedora 41 的勢頭，又嘗試從網路上尋找方法除錯，還真的被我找到了，於是就記錄下來，不然覺得要額外安裝 Docker 實在有點麻煩。"}]}]},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"之前在"},{"type":"element","tag":"article-inner-link","props":{"slug":"vue_stack_development_devcontainer"},"children":[]},{"type":"text","value":"中曾經紀錄過如何使用 VSCode DevContainer 來容器化開發 Vue 專案，但因為自己平常用的作業系統是 Fedora，而 Fedora 內建的容器化引擎是 Podman，雖然 Podman 號稱與 Docker 之間的指令是互通的，但之前嘗試過會有錯誤而且一直找不到解方。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"不過這幾天趁著要把筆電重灌成 Fedora 41 的勢頭，又嘗試從網路上尋找方法除錯，還真的被我找到了，於是就記錄下來，不然覺得要額外安裝 Docker 實在有點麻煩。"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"podman-簡介"},"children":[{"type":"text","value":"Podman 簡介"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"總之呢，Podman 是 Redhat 公司所推出的，一款跟 Docker 一樣是開放原始碼的容器管理工具。與 Docker 最大的差異是 Podman 預設都是無根權限的，沒有所謂的「守護進程」，Podman 比起 Docker 開源的部份更多、更符合 OCI 規範。"}]},{"type":"element","tag":"article-note","props":{},"children":[{"type":"text","value":"\n關於 Podman 的詳細介紹以及與 Docker 的比較，可參考\n"},{"type":"element","tag":"a","props":{"href":"https://www.redhat.com/en/topics/containers/what-is-podman","rel":["nofollow"]},"children":[{"type":"text","value":"Redhat 官方文章"}]},{"type":"text","value":"\n。\n"}]},{"type":"element","tag":"h3","props":{"id":"遇到的問題"},"children":[{"type":"text","value":"遇到的問題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 VSCode DevContainer 中使用 Podman 替代 Docker 最大的問題，就是使用者權限錯亂，這會導致在 Podman 中運作的 DevContainer 看不到專案結構與目錄，也無法修改、建立檔案。"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"前置作業安裝模擬-docker-的-podman-套件"},"children":[{"type":"text","value":"前置作業：安裝模擬 Docker 的 Podman 套件"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"雖然可以透過調整 VSCode 的設定值來讓 DevContainer 所呼叫的指令從"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker"}]},{"type":"text","value":"改用"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"podman"}]},{"type":"text","value":"，但 Fedora 有內建一個很方便的套件叫做"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"podman-docker"}]},{"type":"text","value":"，它會自動使用"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"podman"}]},{"type":"text","value":"來接收"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker"}]},{"type":"text","value":"的指令，並且調整相關變數（例如"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"$DOCKER_HOST"}]},{"type":"text","value":"），比起自己一個一個設定會來得方便許多。那麼來安裝它："}]},{"type":"element","tag":"pre","props":{"className":"language-bash shiki shiki-themes github-dark","code":"sudo dnf install podman-docker\n","language":"bash","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#B392F0"},"children":[{"type":"text","value":"sudo"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":" dnf"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":" install"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":" podman-docker\n"}]}]}]}]},{"type":"element","tag":"article-note","props":{},"children":[{"type":"text","value":"\n若有先安裝 Docker，建議先完全移除後重新開機，此部份可參考\n"},{"type":"element","tag":"a","props":{"href":"https://docs.docker.com/engine/install/fedora/#uninstall-docker-engine","rel":["nofollow"]},"children":[{"type":"text","value":"官方文件"}]},{"type":"text","value":"\n，然後再安裝\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"podman-docker"}]},{"type":"text","value":"\n。\n"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"調整devcontainerjson"},"children":[{"type":"text","value":"調整"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"devcontainer.json"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在上網找了很多文章之後，嘗試出來的解法是修改"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"devcontainer.json"}]},{"type":"text","value":"的設定，長這樣："}]},{"type":"element","tag":"pre","props":{"className":"language-json shiki shiki-themes github-dark","code":"{\n  /* 這兩行是使用內建指令建立開發者容器時就有的 */\n  \"name\": \"Node.js\",\n  \"image\": \"mcr.microsoft.com/devcontainers/javascript-node:1-20-bookworm\",\n  /* 下面這四行才是為了Podman加的 */\n  \"runArgs\": [\"--userns=keep-id\"],\n  // 這裡的「node」似乎是要跟容器內部預設的使用者名稱相同\n  \"containerEnv\": {\n    \"HOME\": \"/home/node\"\n  },\n  // 這裡的target網路是直接寫/workspace，不過為了區分我加上了自己的專案資料夾路徑。\n  \"workspaceMount\": \"source=${localWorkspaceFolder},target=/workspace/blog,type=bind,Z\",\n  // 這裡的網路是直接寫/workspace，不過為了區分我加上了自己的專案資料夾路徑。\n  \"workspaceFolder\": \"/workspace/blog\"\n}\n","filename":"devcontainer.json","language":"json","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":"{\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#6A737D"},"children":[{"type":"text","value":"  /* 這兩行是使用內建指令建立開發者容器時就有的 */\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#79B8FF"},"children":[{"type":"text","value":"  \"name\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":"\"Node.js\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":",\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#79B8FF"},"children":[{"type":"text","value":"  \"image\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":"\"mcr.microsoft.com/devcontainers/javascript-node:1-20-bookworm\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":",\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#6A737D"},"children":[{"type":"text","value":"  /* 下面這四行才是為了Podman加的 */\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#79B8FF"},"children":[{"type":"text","value":"  \"runArgs\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":": ["}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":"\"--userns=keep-id\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":"],\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#6A737D"},"children":[{"type":"text","value":"  // 這裡的「node」似乎是要跟容器內部預設的使用者名稱相同\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#79B8FF"},"children":[{"type":"text","value":"  \"containerEnv\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":": {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#79B8FF"},"children":[{"type":"text","value":"    \"HOME\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":"\"/home/node\"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":"  },\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#6A737D"},"children":[{"type":"text","value":"  // 這裡的target網路是直接寫/workspace，不過為了區分我加上了自己的專案資料夾路徑。\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#79B8FF"},"children":[{"type":"text","value":"  \"workspaceMount\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":"\"source=${localWorkspaceFolder},target=/workspace/blog,type=bind,Z\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":",\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#6A737D"},"children":[{"type":"text","value":"  // 這裡的網路是直接寫/workspace，不過為了區分我加上了自己的專案資料夾路徑。\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#79B8FF"},"children":[{"type":"text","value":"  \"workspaceFolder\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":"\"/workspace/blog\"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":"}\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"老實說我也不是很懂為什麼這樣就能解決問題，但問了 ChatGPT 跟自己查找一些資料之後，應該是透過"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"runArgs"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"containerEnv"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"workspaceMount"}]},{"type":"text","value":"去統一了容器內外的使用者及權限，來解決 Podman 預設無根的權限問題，"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"workspaceFolder"}]},{"type":"text","value":"只是配合"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"workspaceMount"}]},{"type":"text","value":"的掛載路徑，讓容器內的工作目錄一起動就會定位在專案下，來讓流程更直觀一點。"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"參考文章"},"children":[{"type":"text","value":"參考文章"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://code.visualstudio.com/remote/advancedcontainers/docker-options#_podman","rel":["nofollow"]},"children":[{"type":"text","value":"Alternate ways to install Docker"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://gist.github.com/dariuszparys/05ad6b0bf070cda64724b668f35c897c","rel":["nofollow"]},"children":[{"type":"text","value":"Running Visual Studio Code DevContainers with Podman"}]}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"podman-簡介","depth":2,"text":"Podman 簡介","children":[{"id":"遇到的問題","depth":3,"text":"遇到的問題"}]},{"id":"前置作業安裝模擬-docker-的-podman-套件","depth":2,"text":"前置作業：安裝模擬 Docker 的 Podman 套件"},{"id":"調整devcontainerjson","depth":2,"text":"調整devcontainer.json"},{"id":"參考文章","depth":2,"text":"參考文章"}]}},"_type":"markdown","_id":"content:articles:2024:fedora_vscode_devcontainer_podman.md","_source":"content","_file":"articles/2024/fedora_vscode_devcontainer_podman.md","_stem":"articles/2024/fedora_vscode_devcontainer_podman","_extension":"md","createdAt":"2024-11-03T03:18:44.000Z","updatedAt":"2024-11-03T03:18:44.000Z","slug":"fedora_vscode_devcontainer_podman","plainTexts":["之前在","中曾經紀錄過如何使用 VSCode DevContainer 來容器化開發 Vue 專案，但因為自己平常用的作業系統是 Fedora，而 Fedora 內建的容器化引擎是 Podman，雖然 Podman 號稱與 Docker 之間的指令是互通的，但之前嘗試過會有錯誤而且一直找不到解方。","不過這幾天趁著要把筆電重灌成 Fedora 41 的勢頭，又嘗試從網路上尋找方法除錯，還真的被我找到了，於是就記錄下來，不然覺得要額外安裝 Docker 實在有點麻煩。","Podman 簡介","總之呢，Podman 是 Redhat 公司所推出的，一款跟 Docker 一樣是開放原始碼的容器管理工具。與 Docker 最大的差異是 Podman 預設都是無根權限的，沒有所謂的「守護進程」，Podman 比起 Docker 開源的部份更多、更符合 OCI 規範。","關於 Podman 的詳細介紹以及與 Docker 的比較，可參考","Redhat 官方文章","。","遇到的問題","在 VSCode DevContainer 中使用 Podman 替代 Docker 最大的問題，就是使用者權限錯亂，這會導致在 Podman 中運作的 DevContainer 看不到專案結構與目錄，也無法修改、建立檔案。","前置作業：安裝模擬 Docker 的 Podman 套件","雖然可以透過調整 VSCode 的設定值來讓 DevContainer 所呼叫的指令從","docker","改用","podman","，但 Fedora 有內建一個很方便的套件叫做","podman-docker","，它會自動使用","podman","來接收","docker","的指令，並且調整相關變數（例如","$DOCKER_HOST","），比起自己一個一個設定會來得方便許多。那麼來安裝它：","sudo","dnf","install","podman-docker","若有先安裝 Docker，建議先完全移除後重新開機，此部份可參考","官方文件","，然後再安裝","podman-docker","。","調整","devcontainer.json","在上網找了很多文章之後，嘗試出來的解法是修改","devcontainer.json","的設定，長這樣：","{","/* 這兩行是使用內建指令建立開發者容器時就有的 */","\"name\"",":","\"Node.js\"",",","\"image\"",":","\"mcr.microsoft.com/devcontainers/javascript-node:1-20-bookworm\"",",","/* 下面這四行才是為了Podman加的 */","\"runArgs\"",": [","\"--userns=keep-id\"","],","// 這裡的「node」似乎是要跟容器內部預設的使用者名稱相同","\"containerEnv\"",": {","\"HOME\"",":","\"/home/node\"","},","// 這裡的target網路是直接寫/workspace，不過為了區分我加上了自己的專案資料夾路徑。","\"workspaceMount\"",":","\"source=${localWorkspaceFolder},target=/workspace/blog,type=bind,Z\"",",","// 這裡的網路是直接寫/workspace，不過為了區分我加上了自己的專案資料夾路徑。","\"workspaceFolder\"",":","\"/workspace/blog\"","}","老實說我也不是很懂為什麼這樣就能解決問題，但問了 ChatGPT 跟自己查找一些資料之後，應該是透過","runArgs","/","containerEnv","/","workspaceMount","去統一了容器內外的使用者及權限，來解決 Podman 預設無根的權限問題，","workspaceFolder","只是配合","workspaceMount","的掛載路徑，讓容器內的工作目錄一起動就會定位在專案下，來讓流程更直觀一點。","參考文章","Alternate ways to install Docker","Running Visual Studio Code DevContainers with Podman","html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"]}